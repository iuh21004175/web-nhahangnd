document.addEventListener('DOMContentLoaded', async function () {
    let listDonHang = await getAPIXemDonHang();
    thaoTacDonHang(listDonHang);

    document.addEventListener('click', async function (e) {
        if (e.target.classList.contains('btn-cancel-order')) {
            const orderId = e.target.getAttribute('data-id');
            if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy ƒë∆°n h√†ng n√†y kh√¥ng?')) {
                const response = await fetch(`/api/huy-don-hang/${orderId}`, {
                    method: 'PUT', 
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include'
                });
                const data = await response.json();
                if (data.status) {
                    alert('ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c h·ªßy.');
                    // L√†m m·ªõi danh s√°ch ƒë∆°n h√†ng sau khi h·ªßy
                    let listDonHang = await getAPIXemDonHang();
                    thaoTacDonHang(listDonHang);
                } else {
                    alert('H·ªßy ƒë∆°n h√†ng th·∫•t b·∫°i: ' + (data.message || 'L·ªói kh√¥ng x√°c ƒë·ªãnh.'));
                }
            }
        }
       
    });
    

    // X·ª≠ l√Ω s·ª± ki·ªán khi ch·ªçn tab
    const tabButtons = document.querySelectorAll('#orderTabs .nav-link');
    tabButtons.forEach(button => {
        button.addEventListener('click', function () {
            const status = button.getAttribute('data-status');
            filterOrdersByStatus(status, listDonHang);
        });
    });
});

// L·ªçc ƒë∆°n h√†ng theo tr·∫°ng th√°i
function filterOrdersByStatus(status, allOrders) {
    let filteredOrders = allOrders;
    if (status !== 'all') {
        filteredOrders = allOrders.filter(donHang => donHang.trangThai.toString() === status);
    }
    thaoTacDonHang(filteredOrders);
}

// H√†m thao t√°c v·ªõi ƒë∆°n h√†ng
function thaoTacDonHang(list) {
    const danhSachDonHang = document.querySelector('#orderList');
    danhSachDonHang.innerHTML = ''; // X√≥a danh s√°ch c≈©

    if (!list || list.length === 0) {
        danhSachDonHang.innerHTML = `
            <div class="col-12 text-center">
                <h5>Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</h5>
                <a href="/thuc-don" class="btn btn-primary mt-3">Xem menu</a>
            </div>
        `;
        return;
    }

    list.forEach(function (donHang) {
        // Ph·∫ßn c√≤n l·∫°i gi·ªØ nguy√™n nh∆∞ b·∫°n ƒë√£ vi·∫øt
        const trangThaiText = {
            0: 'ƒê√£ h·ªßy',
            1: 'ƒê·∫∑t th√†nh c√¥ng',
            2: 'ƒê√£ thanh to√°n',
            3: 'ƒêang ch·∫ø bi·∫øn',
            4: 'ƒê√£ ch·∫ø bi·∫øn',
            5: 'ƒêang giao h√†ng',
            6: 'ƒê√£ giao h√†ng'
        };

        const date = new Date(donHang.thoiGianGhi);
        date.setHours(date.getHours() - 7);

        const formattedTime = `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')} ${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()}`;

        const itemsHTML = (donHang.ChiTietDonHangs || []).map(item => {
            const mon = item.MonAn || {};
            const tongTienMon = item.soLuong * item.gia;
            return `
                <div class="cart-item d-flex align-items-center mb-3">
                    <img src="${mon.hinhAnh || '/default.jpg'}" width="80px" height="80px" alt="${mon.ten || 'M√≥n ƒÉn'}" class="cart-item-image me-3">
                    <div class="cart-item-details flex-grow-1">
                        <h6 class="cart-item-title mb-1">${mon.ten || ''}</h6>
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="text-muted">${item.soLuong} x ${item.gia.toLocaleString('vi-VN')}‚Ç´</span>
                            <span class="cart-item-price text-primary">${tongTienMon.toLocaleString('vi-VN')}‚Ç´</span>
                        </div>
                    </div>
                </div>`;
        }).join('');

        let buttonHTML = '';
        if (donHang.trangThai === 1 || donHang.trangThai === 2) {
            // ƒê·∫∑t h√†ng th√†nh c√¥ng ho·∫∑c ƒë√£ thanh to√°n ‚Üí n√∫t H·ªßy (m√†u ƒë·ªè)
            buttonHTML = `<button class="btn btn-danger col-3 text-center btn-cancel-order" data-id="${donHang.id}">H·ªßy</button>`;
        } else if (donHang.trangThai === 6) {
            // ƒê√£ giao ‚Üí n√∫t xanh l√°
            buttonHTML = `<button class="btn btn-success col-3 text-center" data-bs-toggle="modal" data-bs-target="#exampleModal">ƒê√£ giao</button>`;
        } else if (donHang.trangThai === 0) {
            // ƒê√£ h·ªßy ‚Üí n√∫t x√°m
            buttonHTML = `<button class="btn btn-secondary col-3 text-center" data-bs-toggle="modal" data-bs-target="#exampleModal">ƒê√£ h·ªßy</button>`;
        } else {
            // C√°c tr·∫°ng th√°i kh√°c ‚Üí ƒëang th·ª±c hi·ªán (m√†u v√†ng)
            buttonHTML = `<button class="btn btn-warning col-3 text-center" data-bs-toggle="modal" data-bs-target="#exampleModal">ƒêang th·ª±c hi·ªán</button>`;
        }
        


        const html = `
            <div class="col-md-6">
                <div class="order-card card h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <span class="order-id">ƒê∆°n ${donHang.id}</span>
                        <span class="order-status badge">${trangThaiText[donHang.trangThai]}</span>
                    </div>
                    <div class="card-body">
                        <div class="order-items mb-3">
                            ${itemsHTML}
                        </div>
                        <div class="order-info">
                            <div class="row mb-2">
                                <div class="col-6 text-muted">Th·ªùi gian ƒë·∫∑t:</div>
                                <div class="col-6 text-end order-time">${formattedTime}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-6 text-muted">ƒê·ªãa ch·ªâ:</div>
                                <div class="col-6 text-end order-address">${donHang.diaChi}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-6 text-muted">T·ªïng ti·ªÅn:</div>
                                <div class="col-6 text-end order-total fw-bold text-primary">${donHang.tongTien.toLocaleString('vi-VN')}‚Ç´</div>
                            </div>
                            <div class="row">
                                <div class="col-6 text-muted">Tr·∫°ng th√°i:</div>
                                <div class="col-6 text-end order-address">${trangThaiText[donHang.trangThai]}</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-9 text-muted"></div>
                            ${buttonHTML}
                        </div>
                    </div>
                </div>
            </div>`;
        danhSachDonHang.innerHTML += html;
    });
}


// H√†m l·∫•y danh s√°ch ƒë∆°n h√†ng t·ª´ API
async function getAPIXemDonHang() {
    try {
        const response = await fetch('/api/lay-don-hang', {
            method: 'GET',
            credentials: 'include'
        });
        const data = await response.json();
        console.log('D·ªØ li·ªáu nh·∫≠n v·ªÅ t·ª´ API:', data);
        if (data.status) {
            return data.list;  
        } else {
            console.error('‚ùå L·ªói t·ª´ server:', data.error);
            return [];
        }
    } catch (error) {
        console.error('üö´ L·ªói khi fetch:', error);
        return [];
    }
}
